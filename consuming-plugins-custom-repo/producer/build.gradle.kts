/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`
    `maven-publish`
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation("junit:junit:4.13")
}

val functionalTestSourceSet = sourceSets.create("functionalTest")
configurations["functionalTestImplementation"].extendsFrom(configurations["testImplementation"])

tasks {
    val functionalTest by registering(Test::class) {
        testClassesDirs = functionalTestSourceSet.output.classesDirs
        classpath = functionalTestSourceSet.runtimeClasspath
    }
    check {
        dependsOn(functionalTest)
    }
}

group = "org.example.plugins"
version = "0.1"

gradlePlugin {
    testSourceSets(functionalTestSourceSet)
    plugins {
        create("a") {
            id = "org.example.a"
            implementationClass = "org.example.plugins.PluginA"
        }
        create("b") {
            id = "org.example.b"
            implementationClass = "org.example.plugins.PluginB"
        }
    }
}

publishing {
    repositories {
        maven {
            name = "local"
            url = uri(file("../repo"))
        }
    }
}
